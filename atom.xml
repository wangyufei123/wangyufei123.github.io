<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>随笔小记</title>
  
  <subtitle>Java 前端</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://lwblog.xyz/"/>
  <updated>2020-05-28T03:15:06.231Z</updated>
  <id>http://lwblog.xyz/</id>
  
  <author>
    <name>Mr.Wang</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Activiti6.0工作流引擎学习(二) -- 引擎配置</title>
    <link href="http://lwblog.xyz/posts/1d8f65f1.html"/>
    <id>http://lwblog.xyz/posts/1d8f65f1.html</id>
    <published>2020-05-28T03:09:05.000Z</published>
    <updated>2020-05-28T03:15:06.231Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Activiti6-0工作流引擎学习-二-–-引擎配置"><a href="#Activiti6-0工作流引擎学习-二-–-引擎配置" class="headerlink" title="Activiti6.0工作流引擎学习(二) – 引擎配置"></a>Activiti6.0工作流引擎学习(二) – 引擎配置</h1><h2 id="1-Activiti流程引擎配置涉及的类"><a href="#1-Activiti流程引擎配置涉及的类" class="headerlink" title="1.Activiti流程引擎配置涉及的类"></a>1.Activiti流程引擎配置涉及的类</h2><p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1gf6rcr6dzaj31b40nw4bp.jpg" alt="Activiti流程引擎配置"></p><h3 id="1-1-流程引擎配置类的作用"><a href="#1-1-流程引擎配置类的作用" class="headerlink" title="1.1 流程引擎配置类的作用"></a>1.1 流程引擎配置类的作用</h3><ol><li>ProcessEngineConfiguration<ul><li>查找并解析xml配置文件activiti.cfg.xml</li><li>提供多个静态方法创建配置对象<br>  <img src="https://tva1.sinaimg.cn/large/007S8ZIlly1gf6rna78thj310407mwsc.jpg" alt="静态方法创建配置对象"></li><li>实现几个基于不同场景场景的子类，配置方式非常的灵活<br><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1gf6ry2ub4qj318808oat3.jpg" alt="使用场景"></li></ul></li></ol><h3 id="1-2-部分子类的使用"><a href="#1-2-部分子类的使用" class="headerlink" title="1.2 部分子类的使用"></a>1.2 部分子类的使用</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testConfig1</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="comment">//通过默认来创建引擎；会通过spring的解析进行创建引擎对象</span></span><br><span class="line">        ProcessEngineConfiguration engine</span><br><span class="line">                = ProcessEngineConfiguration.createProcessEngineConfigurationFromResourceDefault();</span><br><span class="line">        log.info(<span class="string">"engine =&#123;&#125;"</span>,engine);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testConfig2</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="comment">//直接创建标准的引擎，直接new一个引擎对象</span></span><br><span class="line">        ProcessEngineConfiguration configuration = ProcessEngineConfiguration.createStandaloneProcessEngineConfiguration();</span><br><span class="line">        log.info(<span class="string">"configuration = &#123;&#125;"</span>,configuration);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h2 id="2-数据库配置"><a href="#2-数据库配置" class="headerlink" title="2.数据库配置"></a>2.数据库配置</h2><h3 id="2-1-缺省配置默认，使用H2内存数据库"><a href="#2-1-缺省配置默认，使用H2内存数据库" class="headerlink" title="2.1 缺省配置默认，使用H2内存数据库"></a>2.1 缺省配置默认，使用H2内存数据库</h3><h3 id="2-2-配置JDBC属性，使用mybatis提供的链接池"><a href="#2-2-配置JDBC属性，使用mybatis提供的链接池" class="headerlink" title="2.2 配置JDBC属性，使用mybatis提供的链接池"></a>2.2 配置JDBC属性，使用mybatis提供的链接池</h3><p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1gf6trk2he0j315o0bydor.jpg" alt=""></p><h3 id="2-3-配置DataSource，可自选第三方实现"><a href="#2-3-配置DataSource，可自选第三方实现" class="headerlink" title="2.3 配置DataSource，可自选第三方实现"></a>2.3 配置DataSource，可自选第三方实现</h3><ol><li>Druid 为监控而生的数据库连接池 来自阿里<br><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1gf6tzwnzmgj31a806awm5.jpg" alt=""><br><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1gf6u1fe54sj319o0c417z.jpg" alt=""></li><li>Dbcp 老牌数据源连接池，稳定可靠，Tomcat自带</li><li>HikariCP 来自日本的极速数据源连接池，Spring默选</li></ol><h3 id="2-4-数据库更新策略"><a href="#2-4-数据库更新策略" class="headerlink" title="2.4 数据库更新策略"></a>2.4 数据库更新策略</h3><ol><li>配置databaseSchemaUpdate<ul><li>false：启动时检查数据库版本，发生不匹配抛异常</li><li>true: 启动时自动检查并甭信数据库表，不存在会创建</li><li>create-drop: 启动时创建数据库表结构，结束时删除表结构</li></ul></li></ol><h3 id="2-5-数据库配置编码"><a href="#2-5-数据库配置编码" class="headerlink" title="2.5 数据库配置编码"></a>2.5 数据库配置编码</h3><h4 id="2-5-1-使用默认的配置文件创建流程引擎"><a href="#2-5-1-使用默认的配置文件创建流程引擎" class="headerlink" title="2.5.1 使用默认的配置文件创建流程引擎"></a>2.5.1 使用默认的配置文件创建流程引擎</h4><p><code>activiti.cfg.xml</code>文件</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">"http://www.springframework.org/schema/beans"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://www.springframework.org/schema/beans   http://www.springframework.org/schema/beans/spring-beans.xsd"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"processEngineConfiguration"</span></span></span><br><span class="line"><span class="tag">          <span class="attr">class</span>=<span class="string">"org.activiti.engine.impl.cfg.StandaloneProcessEngineConfiguration"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--&lt;property name="jdbcUrl" value="jdbc:h2:mem:activiti;DB_CLOSE_DELAY=1000" /&gt;</span></span><br><span class="line"><span class="comment">        &lt;property name="jdbcDriver" value="org.h2.Driver" /&gt;</span></span><br><span class="line"><span class="comment">        &lt;property name="jdbcUsername" value="sa" /&gt;</span></span><br><span class="line"><span class="comment">        &lt;property name="jdbcPassword" value="" /&gt;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">        &amp;lt;!&amp;ndash; Database configurations &amp;ndash;&amp;gt;</span></span><br><span class="line"><span class="comment">        &lt;property name="databaseSchemaUpdate" value="drop-create" /&gt;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">        &lt;property name="history" value="full" /&gt;--&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test1</span><span class="params">()</span></span>&#123;</span><br><span class="line">       ProcessEngineConfiguration configuration =</span><br><span class="line">               ProcessEngineConfiguration.createProcessEngineConfigurationFromResourceDefault();</span><br><span class="line">       log.info(<span class="string">"configuration = &#123;&#125;"</span>,configuration);</span><br><span class="line">       ProcessEngine processEngine = configuration.buildProcessEngine();</span><br><span class="line">       log.info(<span class="string">"获取流程引擎 = [&#123;&#125;]"</span>,processEngine.getName());</span><br><span class="line">       processEngine.close();</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><h4 id="2-5-2-使用druid数据源"><a href="#2-5-2-使用druid数据源" class="headerlink" title="2.5.2 使用druid数据源"></a>2.5.2 使用druid数据源</h4><p>activiti_druid.cfg.xml配置文件</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">"http://www.springframework.org/schema/beans"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://www.springframework.org/schema/beans   http://www.springframework.org/schema/beans/spring-beans.xsd"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"processEngineConfiguration"</span></span></span><br><span class="line"><span class="tag">          <span class="attr">class</span>=<span class="string">"org.activiti.engine.impl.cfg.StandaloneProcessEngineConfiguration"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--&lt;property name="jdbcUrl" value="jdbc:h2:mem:activiti;DB_CLOSE_DELAY=1000" /&gt;</span></span><br><span class="line"><span class="comment">        &lt;property name="jdbcDriver" value="org.h2.Driver" /&gt;</span></span><br><span class="line"><span class="comment">        &lt;property name="jdbcUsername" value="sa" /&gt;</span></span><br><span class="line"><span class="comment">        &lt;property name="jdbcPassword" value="" /&gt;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">        &amp;lt;!&amp;ndash; Database configurations &amp;ndash;&amp;gt;--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"databaseSchemaUpdate"</span> <span class="attr">value</span>=<span class="string">"drop-create"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"dataSource"</span> <span class="attr">ref</span>=<span class="string">"dataSource"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"history"</span> <span class="attr">value</span>=<span class="string">"full"</span> /&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--引擎是否使用历史数据--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"dbHistoryUsed"</span> <span class="attr">value</span>=<span class="string">"true"</span>/&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--引擎是否使用身份验证--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"dbIdentityUsed"</span> <span class="attr">value</span>=<span class="string">"true"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"dataSource"</span> <span class="attr">class</span>=<span class="string">"com.alibaba.druid.pool.DruidDataSource"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"url"</span> <span class="attr">value</span>=<span class="string">"jdbc:mysql://111.229.203.5:3306/activiti?serverTimezone=CTT<span class="symbol">&amp;amp;</span>useUnicode=true<span class="symbol">&amp;amp;</span>characterEncoding=utf-8<span class="symbol">&amp;amp;</span>allowMultiQueries=true"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"driverClassName"</span> <span class="attr">value</span>=<span class="string">"com.mysql.cj.jdbc.Driver"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"username"</span> <span class="attr">value</span>=<span class="string">"weaver"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"password"</span> <span class="attr">value</span>=<span class="string">"192612"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"initialSize"</span> <span class="attr">value</span>=<span class="string">"1"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"maxActive"</span> <span class="attr">value</span>=<span class="string">"10"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"filters"</span> <span class="attr">value</span>=<span class="string">"stat,slf4j"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test2</span><span class="params">()</span></span>&#123;</span><br><span class="line">        ProcessEngineConfiguration configuration =</span><br><span class="line">                ProcessEngineConfiguration.createProcessEngineConfigurationFromResource(<span class="string">"activiti_druid.cfg.xml"</span>);</span><br><span class="line">        log.info(<span class="string">"configuration = &#123;&#125;"</span>,configuration);</span><br><span class="line">        ProcessEngine processEngine = configuration.buildProcessEngine();</span><br><span class="line">        log.info(<span class="string">"获取流程引擎 = [&#123;&#125;]"</span>,processEngine.getName());</span><br><span class="line">        processEngine.close();</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h2 id="3-日志记录配置"><a href="#3-日志记录配置" class="headerlink" title="3.日志记录配置"></a>3.日志记录配置</h2><h3 id="3-1-日志组件的关系及MDC"><a href="#3-1-日志组件的关系及MDC" class="headerlink" title="3.1 日志组件的关系及MDC"></a>3.1 日志组件的关系及MDC</h3><p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1gf6z7p2plmj311o0ps194.jpg" alt=""></p><h4 id="3-1-1-配置开启MDC-Mapped-Diagnostic-Contexts"><a href="#3-1-1-配置开启MDC-Mapped-Diagnostic-Contexts" class="headerlink" title="3.1.1 配置开启MDC(Mapped Diagnostic Contexts)"></a>3.1.1 配置开启MDC(Mapped Diagnostic Contexts)</h4><ol><li>默认没有开启，需要手动设置<code>LogMDC.setMDCEnable(true)</code></li><li>配置logback.xml日志模版 <code>%X{mdcProcessInstanceID}</code></li><li>流程只有在执行过程出现异常才会记录MDC信息</li></ol><h3 id="3-2-配置历史记录级别-HistoryLevel"><a href="#3-2-配置历史记录级别-HistoryLevel" class="headerlink" title="3.2 配置历史记录级别(HistoryLevel)"></a>3.2 配置历史记录级别(HistoryLevel)</h3><h4 id="3-2-1-配置HistoryLevel"><a href="#3-2-1-配置HistoryLevel" class="headerlink" title="3.2.1 配置HistoryLevel"></a>3.2.1 配置HistoryLevel</h4><ol><li>none:不记录历史流程，性能高，流程结束后不可读取</li><li>activiti:归档流程实例和活动实例，流程变量不同步</li><li>addit:默认值，在activiti基础上同步变量值，保存表单属性</li><li>full:性能较差，记录所有实例和变量细节变化</li></ol><h3 id="3-3-配置基于db的事件日志-Event-logging"><a href="#3-3-配置基于db的事件日志-Event-logging" class="headerlink" title="3.3 配置基于db的事件日志(Event logging)"></a>3.3 配置基于db的事件日志(Event logging)</h3><h4 id="3-3-1-配置Event-Logging"><a href="#3-3-1-配置Event-Logging" class="headerlink" title="3.3.1 配置Event Logging"></a>3.3.1 配置Event Logging</h4><ol><li>试验性的事件记录机制，性能影响较大</li><li>开启默认记录所有数据的变化过程，表记录快速增长</li><li>日志内容json格式，建议存入mongoDB、Elastic Search</li></ol><h3 id="3-4-日志记录-mdc"><a href="#3-4-日志记录-mdc" class="headerlink" title="3.4 日志记录 mdc"></a>3.4 日志记录 mdc</h3><h2 id="4-历史记录配置"><a href="#4-历史记录配置" class="headerlink" title="4 历史记录配置"></a>4 历史记录配置</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.atguigu.test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.google.common.collect.Maps;</span><br><span class="line"><span class="keyword">import</span> org.activiti.engine.history.HistoricActivityInstance;</span><br><span class="line"><span class="keyword">import</span> org.activiti.engine.history.HistoricDetail;</span><br><span class="line"><span class="keyword">import</span> org.activiti.engine.runtime.Execution;</span><br><span class="line"><span class="keyword">import</span> org.activiti.engine.runtime.ProcessInstance;</span><br><span class="line"><span class="keyword">import</span> org.activiti.engine.task.Task;</span><br><span class="line"><span class="keyword">import</span> org.activiti.engine.test.ActivitiRule;</span><br><span class="line"><span class="keyword">import</span> org.activiti.engine.test.Deployment;</span><br><span class="line"><span class="keyword">import</span> org.junit.Rule;</span><br><span class="line"><span class="keyword">import</span> org.junit.Test;</span><br><span class="line"><span class="keyword">import</span> org.slf4j.Logger;</span><br><span class="line"><span class="keyword">import</span> org.slf4j.LoggerFactory;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@program</span>: activiti6</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span>: 测试MDC</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: Mr.Wang</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span>: 2020-14-31</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestMDC</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> Logger log = LoggerFactory.getLogger(TestMDC<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">    <span class="meta">@Rule</span></span><br><span class="line">    <span class="keyword">public</span> ActivitiRule activitiRule = <span class="keyword">new</span> ActivitiRule();</span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="comment">//定义流程文件部署</span></span><br><span class="line">    <span class="meta">@Deployment</span>(resources = &#123;<span class="string">"my-process.bpmn20.xml"</span>&#125;)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test</span><span class="params">()</span></span>&#123;</span><br><span class="line">        Map&lt;String,Object&gt; params = Maps.newHashMap();</span><br><span class="line">        params.put(<span class="string">"keyStart1"</span>,<span class="string">"value1"</span>);</span><br><span class="line">        params.put(<span class="string">"keyStart2"</span>,<span class="string">"value2"</span>);</span><br><span class="line">        <span class="comment">//启动流程</span></span><br><span class="line">        ProcessInstance processInstance =</span><br><span class="line">                activitiRule.getRuntimeService().startProcessInstanceByKey(<span class="string">"my-process"</span>,params);</span><br><span class="line">        <span class="comment">//修改变量</span></span><br><span class="line">        List&lt;Execution&gt; executions = activitiRule.getRuntimeService().createExecutionQuery().listPage(<span class="number">0</span>, <span class="number">100</span>);</span><br><span class="line">        <span class="keyword">for</span> (Execution execution : executions) &#123;</span><br><span class="line">            log.info(<span class="string">"executions &#123;&#125;"</span>,executions);</span><br><span class="line">        &#125;</span><br><span class="line">        log.info(<span class="string">"executions size = &#123;&#125;"</span>,executions.size());</span><br><span class="line">        String id = executions.iterator().next().getId();</span><br><span class="line">        activitiRule.getRuntimeService().setVariable(id,<span class="string">"keyStart1"</span>,<span class="string">"value1_"</span>);</span><br><span class="line">                <span class="comment">//提交表单task 修改变量</span></span><br><span class="line">        Task task = activitiRule.getTaskService().createTaskQuery().singleResult();</span><br><span class="line">        Map&lt;String,String&gt; properties = Maps.newHashMap();</span><br><span class="line">        properties.put(<span class="string">"formkey1"</span>,<span class="string">"valuef1"</span>);</span><br><span class="line">        properties.put(<span class="string">"formkey2"</span>,<span class="string">"valuef2"</span>);</span><br><span class="line">        activitiRule.getFormService().submitTaskFormData(task.getId(),properties);</span><br><span class="line">        <span class="comment">//activitiRule.getTaskService().complete(task.getId());</span></span><br><span class="line">        <span class="comment">//输出历史活动</span></span><br><span class="line">        List&lt;HistoricActivityInstance&gt; historicActivityInstances = activitiRule.getHistoryService().createHistoricActivityInstanceQuery().listPage(<span class="number">0</span>, <span class="number">100</span>);</span><br><span class="line">        <span class="keyword">for</span> (HistoricActivityInstance historicActivityInstance : historicActivityInstances) &#123;</span><br><span class="line">            log.info(<span class="string">"historicActivityInstances = &#123;&#125;"</span>,historicActivityInstances);</span><br><span class="line">        &#125;</span><br><span class="line">        log.info(<span class="string">"historicActivityInstances size = &#123;&#125;"</span>,historicActivityInstances.size());</span><br><span class="line"></span><br><span class="line">        <span class="comment">//输出历史表单</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//输出历史详情</span></span><br><span class="line">        List&lt;HistoricDetail&gt; historicDetails = activitiRule.getHistoryService().createHistoricDetailQuery().listPage(<span class="number">0</span>, <span class="number">100</span>);</span><br><span class="line">        <span class="keyword">for</span> (HistoricDetail historicDetail : historicDetails) &#123;</span><br><span class="line">            log.info(<span class="string">"historicDetail [&#123;&#125;]"</span>,historicDetail);</span><br><span class="line">        &#125;</span><br><span class="line">        log.info(<span class="string">"historicDetail size = [&#123;&#125;]"</span>, historicDetails.size());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="5-事件处理及监听配置-eventlog"><a href="#5-事件处理及监听配置-eventlog" class="headerlink" title="5.事件处理及监听配置-eventlog"></a>5.事件处理及监听配置-eventlog</h2><h3 id="5-1-事件及监听器原理"><a href="#5-1-事件及监听器原理" class="headerlink" title="5.1 事件及监听器原理"></a>5.1 事件及监听器原理</h3><p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1gf7zqvwqsnj31js0fmq5s.jpg" alt=""></p><h3 id="5-2-监听器的配置方式"><a href="#5-2-监听器的配置方式" class="headerlink" title="5.2 监听器的配置方式"></a>5.2 监听器的配置方式</h3><ol><li>配置Listener<ol><li>eventListeners:监听所有事件派发通知</li><li>typedEventListeners:监听指定事件类型的通知</li><li>activiti:eventListener:只监听特定流程定义的事件<br><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1gf7zr4t5btj31jo0hytck.jpg" alt=""></li></ol></li></ol><h3 id="5-3-Activiti事件监听"><a href="#5-3-Activiti事件监听" class="headerlink" title="5.3 Activiti事件监听"></a>5.3 Activiti事件监听</h3><h4 id="5-3-1-相关API"><a href="#5-3-1-相关API" class="headerlink" title="5.3.1 相关API"></a>5.3.1 相关API</h4><ul><li>ActivitiEvent:事件对象</li><li>ActivitiEventListener:监听器</li><li>ActivitiEventType:事件类型</li></ul><h3 id="5-4-ActivitiEventListener监听器的使用"><a href="#5-4-ActivitiEventListener监听器的使用" class="headerlink" title="5.4 ActivitiEventListener监听器的使用"></a>5.4 ActivitiEventListener监听器的使用</h3><ol><li>配置文件中增加对应的配置</li></ol><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--配置事件监听器--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"eventListeners"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">list</span>&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--监听器的实现类--&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">"com.atguigu.event.ProcessEventListener"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">list</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br></pre></td></tr></table></figure><ol start="2"><li>创建一个实体类，实现<code>ActivitiEventListener</code>类</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.atguigu.event;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.activiti.bpmn.model.ActivitiListener;</span><br><span class="line"><span class="keyword">import</span> org.activiti.engine.delegate.event.ActivitiEvent;</span><br><span class="line"><span class="keyword">import</span> org.activiti.engine.delegate.event.ActivitiEventListener;</span><br><span class="line"><span class="keyword">import</span> org.activiti.engine.delegate.event.ActivitiEventType;</span><br><span class="line"><span class="keyword">import</span> org.slf4j.Logger;</span><br><span class="line"><span class="keyword">import</span> org.slf4j.LoggerFactory;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@program</span>: activiti6</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span>: 流程监听</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: Mr.Wang</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span>: 2020-05-27-21-26</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ProcessEventListener</span> <span class="keyword">implements</span> <span class="title">ActivitiEventListener</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> Logger log = LoggerFactory.getLogger(ProcessEventListener<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onEvent</span><span class="params">(ActivitiEvent event)</span> </span>&#123;</span><br><span class="line">        ActivitiEventType type = event.getType();</span><br><span class="line">        <span class="comment">//判断是是否为流程启动</span></span><br><span class="line">        <span class="keyword">if</span>(ActivitiEventType.PROCESS_STARTED.equals(type))&#123;</span><br><span class="line">            log.info(<span class="string">"流程启动 &#123;&#125;"</span>,event.getProcessInstanceId());</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(ActivitiEventType.PROCESS_COMPLETED.equals(type))&#123;</span><br><span class="line">            log.info(<span class="string">"流程结束"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isFailOnException</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="5-5-TypedEventListeners监听器的使用"><a href="#5-5-TypedEventListeners监听器的使用" class="headerlink" title="5.5 TypedEventListeners监听器的使用"></a>5.5 TypedEventListeners监听器的使用</h3><ol><li>配置文件</li></ol><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"typedEventListeners"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">map</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--这样配置的时候，只会监听流程启动--&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">entry</span> <span class="attr">key</span>=<span class="string">"PROCESS_STARTED"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">list</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">"com.atguigu.event.ProcessEventListener"</span>/&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">list</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">entry</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">map</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br></pre></td></tr></table></figure><ol start="2"><li>流程监听实体类</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.atguigu.event;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.activiti.bpmn.model.ActivitiListener;</span><br><span class="line"><span class="keyword">import</span> org.activiti.engine.delegate.event.ActivitiEvent;</span><br><span class="line"><span class="keyword">import</span> org.activiti.engine.delegate.event.ActivitiEventListener;</span><br><span class="line"><span class="keyword">import</span> org.activiti.engine.delegate.event.ActivitiEventType;</span><br><span class="line"><span class="keyword">import</span> org.slf4j.Logger;</span><br><span class="line"><span class="keyword">import</span> org.slf4j.LoggerFactory;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@program</span>: activiti6</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span>: 流程监听</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: Mr.Wang</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span>: 2020-05-27-21-26</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ProcessEventListener</span> <span class="keyword">implements</span> <span class="title">ActivitiEventListener</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> Logger log = LoggerFactory.getLogger(ProcessEventListener<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onEvent</span><span class="params">(ActivitiEvent event)</span> </span>&#123;</span><br><span class="line">        ActivitiEventType type = event.getType();</span><br><span class="line">        <span class="comment">//判断是是否为流程启动</span></span><br><span class="line">        <span class="keyword">if</span>(ActivitiEventType.PROCESS_STARTED.equals(type))&#123;</span><br><span class="line">            log.info(<span class="string">"流程启动 &#123;&#125;"</span>,event.getProcessInstanceId());</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(ActivitiEventType.PROCESS_COMPLETED.equals(type))&#123;</span><br><span class="line">            log.info(<span class="string">"流程结束"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isFailOnException</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//输出的结果为：22:18:38.450 [main] [INFO ]流程启动 4  c.a.e.ProcessEventListener.onEvent:23</span></span><br></pre></td></tr></table></figure><h2 id="6-命令拦截器配置–command"><a href="#6-命令拦截器配置–command" class="headerlink" title="6. 命令拦截器配置–command"></a>6. 命令拦截器配置–command</h2><h3 id="6-1-命令模式与责任链模式"><a href="#6-1-命令模式与责任链模式" class="headerlink" title="6.1 命令模式与责任链模式"></a>6.1 命令模式与责任链模式</h3><h4 id="6-1-1-命令模式"><a href="#6-1-1-命令模式" class="headerlink" title="6.1.1 命令模式"></a>6.1.1 命令模式</h4><p><img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1gf7dv4a99yj31dk0qy4bt.jpg" alt=""><br><img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1gf7dx177oaj319e0qo16v.jpg" alt="时序图"></p><h4 id="6-1-2-责任链模式"><a href="#6-1-2-责任链模式" class="headerlink" title="6.1.2 责任链模式"></a>6.1.2 责任链模式</h4><ul><li>CommandInterceptor<br><img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1gf7dzxamvhj31fk0ca7ba.jpg" alt=""></li><li>配置Interceptor<ul><li>customPreCommandInterceptors:配置在默认拦截器之前</li><li>customPostCommandInterceptors:配置在默认拦截器之后</li><li>commandInvoker:配置最后的执行器</li></ul></li></ul><h3 id="6-2-拦截器的配置方式"><a href="#6-2-拦截器的配置方式" class="headerlink" title="6.2 拦截器的配置方式"></a>6.2 拦截器的配置方式</h3><ol><li>activiti.cfg.xml文件的修改</li></ol><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--拦截器的配置--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"customPreCommandInterceptors"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">list</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">"com.atguigu.interceptor.DurationInterceptor"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">list</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br></pre></td></tr></table></figure><ol start="2"><li>实体类的编写</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.atguigu.interceptor;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.activiti.engine.impl.interceptor.AbstractCommandInterceptor;</span><br><span class="line"><span class="keyword">import</span> org.activiti.engine.impl.interceptor.Command;</span><br><span class="line"><span class="keyword">import</span> org.activiti.engine.impl.interceptor.CommandConfig;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@program</span>: activiti6</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span>: 执行的时间</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: Mr.Wang</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span>: 2020-05-27-22-53</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DurationInterceptor</span> <span class="keyword">extends</span> <span class="title">AbstractCommandInterceptor</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> &lt;T&gt; <span class="function">T <span class="title">execute</span><span class="params">(CommandConfig config, Command&lt;T&gt; command)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">long</span> l = System.currentTimeMillis();</span><br><span class="line">        <span class="keyword">this</span>.getNext().execute(config,command);</span><br><span class="line">        <span class="keyword">long</span> l1 = System.currentTimeMillis();</span><br><span class="line">        <span class="keyword">long</span> duration = l1 - l;</span><br><span class="line">        System.out.println(<span class="string">"执行的时长-----&gt;"</span>+duration);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="6-3-Activiti的拦截器"><a href="#6-3-Activiti的拦截器" class="headerlink" title="6.3 Activiti的拦截器"></a>6.3 Activiti的拦截器</h3><p><img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1gf7e7154rqj30xw0dekfa.jpg" alt=""></p><h2 id="7-作业执行器-Job-Executor"><a href="#7-作业执行器-Job-Executor" class="headerlink" title="7. 作业执行器 Job Executor"></a>7. 作业执行器 Job Executor</h2><h3 id="7-1-作业执行器配置"><a href="#7-1-作业执行器配置" class="headerlink" title="7.1 作业执行器配置"></a>7.1 作业执行器配置</h3><p>（1） asyncExecutorActivate:激活作业执行器<br>（2） asyncExectuorXXX:异步执行器的属性配置<br>（3） asyncExecutor:异步执行器的bean</p><h3 id="7-2-配置自定义线程池"><a href="#7-2-配置自定义线程池" class="headerlink" title="7.2 配置自定义线程池"></a>7.2 配置自定义线程池</h3><h4 id="7-2-1-自定义线程池ExecutorService"><a href="#7-2-1-自定义线程池ExecutorService" class="headerlink" title="7.2.1 自定义线程池ExecutorService"></a>7.2.1 自定义线程池ExecutorService</h4><p>（1） corePoolSize:核心线程数<br>（2） maxPoolSize: 最大线程数<br>（3） queueCapacity:堵塞队列大小</p><h4 id="7-2-2-基于spring线程池的配置"><a href="#7-2-2-基于spring线程池的配置" class="headerlink" title="7.2.2 基于spring线程池的配置"></a>7.2.2 基于spring线程池的配置</h4><p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1gf7wkem35qj31580ben91.jpg" alt=""></p><h3 id="7-3-流程定义定时启动流程"><a href="#7-3-流程定义定时启动流程" class="headerlink" title="7.3 流程定义定时启动流程"></a>7.3 流程定义定时启动流程</h3><h4 id="7-3-1-定时开始事件"><a href="#7-3-1-定时开始事件" class="headerlink" title="7.3.1 定时开始事件"></a>7.3.1 定时开始事件</h4><ol><li>timeDate：指定启动时间</li><li>timeDuration:指定持续时间间隔后执行</li><li>timeCycle:R5/P1DT1H指定事件段后周期执行</li></ol><h3 id="7-4-配置文件修改"><a href="#7-4-配置文件修改" class="headerlink" title="7.4 配置文件修改"></a>7.4 配置文件修改</h3><p>activiti.cfg.xml文件修改</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;bean id&#x3D;&quot;processEngineConfiguration&quot;</span><br><span class="line">          class&#x3D;&quot;org.activiti.engine.impl.cfg.StandaloneProcessEngineConfiguration&quot;&gt;</span><br><span class="line">        &lt;!--打开定时任务的激活器--&gt;</span><br><span class="line">        &lt;property name&#x3D;&quot;asyncExecutorActivate&quot; value&#x3D;&quot;true&quot;&#x2F;&gt;</span><br><span class="line">        &lt;!--定义异步执行器--&gt;</span><br><span class="line">        &lt;property name&#x3D;&quot;asyncExecutor&quot; ref&#x3D;&quot;defaultAsyncJobExecutor&quot;&#x2F;&gt;</span><br><span class="line">    &lt;&#x2F;bean&gt;</span><br><span class="line">    &lt;!--系统默认的自定义任务执行器--&gt;</span><br><span class="line">    &lt;bean id &#x3D; &quot;defaultAsyncJobExecutor&quot; class&#x3D;&quot;org.activiti.engine.impl.asyncexecutor.DefaultAsyncJobExecutor&quot;&gt;</span><br><span class="line">        &lt;!--需要的服务--&gt;</span><br><span class="line">        &lt;property name&#x3D;&quot;executorService&quot; ref&#x3D;&quot;executorService&quot;&#x2F;&gt;</span><br><span class="line">     &lt;&#x2F;bean&gt;</span><br><span class="line">    &lt;!--使用spring的线程池--&gt;</span><br><span class="line">    &lt;bean id &#x3D; &quot;executorService&quot; class&#x3D;&quot;org.springframework.scheduling.concurrent.ThreadPoolExecutorFactoryBean&quot;&gt;</span><br><span class="line">    &lt;!--具体的配置--&gt;</span><br><span class="line">    &lt;&#x2F;bean&gt;</span><br></pre></td></tr></table></figure><h2 id="8-Activiti与Spring的集成"><a href="#8-Activiti与Spring的集成" class="headerlink" title="8 Activiti与Spring的集成"></a>8 Activiti与Spring的集成</h2><h3 id="8-1-集成Spring配置"><a href="#8-1-集成Spring配置" class="headerlink" title="8.1 集成Spring配置"></a>8.1 集成Spring配置</h3><h4 id="8-1-1-相关配置"><a href="#8-1-1-相关配置" class="headerlink" title="8.1.1 相关配置"></a>8.1.1 相关配置</h4><p>(1) 添加pom依赖activiti-spring</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- https:&#x2F;&#x2F;mvnrepository.com&#x2F;artifact&#x2F;org.activiti&#x2F;activiti-spring --&gt;</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;org.activiti&lt;&#x2F;groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;activiti-spring&lt;&#x2F;artifactId&gt;</span><br><span class="line">    &lt;version&gt;6.0.0&lt;&#x2F;version&gt;</span><br><span class="line">&lt;&#x2F;dependency&gt;</span><br></pre></td></tr></table></figure><p>(2) 基于Spring的默认配置activiti-context.xml</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;UTF-8&quot;?&gt;</span><br><span class="line"></span><br><span class="line">&lt;beans xmlns&#x3D;&quot;http:&#x2F;&#x2F;www.springframework.org&#x2F;schema&#x2F;beans&quot;</span><br><span class="line">       xmlns:xsi&#x3D;&quot;http:&#x2F;&#x2F;www.w3.org&#x2F;2001&#x2F;XMLSchema-instance&quot;</span><br><span class="line">       xsi:schemaLocation&#x3D;&quot;http:&#x2F;&#x2F;www.springframework.org&#x2F;schema&#x2F;beans   http:&#x2F;&#x2F;www.springframework.org&#x2F;schema&#x2F;beans&#x2F;spring-beans.xsd&quot;&gt;</span><br><span class="line">&lt;!--数据源配置--&gt;</span><br><span class="line">    &lt;bean id&#x3D;&quot;dataSource&quot; class&#x3D;&quot;com.alibaba.druid.pool.DruidDataSource&quot;&gt;</span><br><span class="line">        &lt;property name&#x3D;&quot;url&quot; value&#x3D;&quot;jdbc:mysql:&#x2F;&#x2F;111.229.203.5:3306&#x2F;activiti?serverTimezone&#x3D;CTT&amp;useUnicode&#x3D;true&amp;characterEncoding&#x3D;utf-8&amp;allowMultiQueries&#x3D;true&quot;&#x2F;&gt;</span><br><span class="line">        &lt;property name&#x3D;&quot;driverClassName&quot; value&#x3D;&quot;com.mysql.cj.jdbc.Driver&quot;&#x2F;&gt;</span><br><span class="line">        &lt;property name&#x3D;&quot;username&quot; value&#x3D;&quot;weaver&quot;&#x2F;&gt;</span><br><span class="line">        &lt;property name&#x3D;&quot;password&quot; value&#x3D;&quot;192612&quot;&#x2F;&gt;</span><br><span class="line">        &lt;property name&#x3D;&quot;initialSize&quot; value&#x3D;&quot;1&quot;&#x2F;&gt;</span><br><span class="line">        &lt;property name&#x3D;&quot;maxActive&quot; value&#x3D;&quot;10&quot;&#x2F;&gt;</span><br><span class="line">        &lt;property name&#x3D;&quot;filters&quot; value&#x3D;&quot;stat,slf4j&quot;&#x2F;&gt;</span><br><span class="line">    &lt;&#x2F;bean&gt;</span><br><span class="line">    &lt;!--事务管理器配置--&gt;</span><br><span class="line">    &lt;bean id&#x3D;&quot;dataSourceTransactionManager&quot; class&#x3D;&quot;org.springframework.jdbc.datasource.DataSourceTransactionManager&quot;&gt;</span><br><span class="line">        &lt;!--指定数据源--&gt;</span><br><span class="line">        &lt;property name&#x3D;&quot;dataSource&quot; ref&#x3D;&quot;dataSource&quot;&#x2F;&gt;</span><br><span class="line">    &lt;&#x2F;bean&gt;</span><br><span class="line">    &lt;bean id&#x3D;&quot;processEngineConfiguration&quot;</span><br><span class="line">          class&#x3D;&quot;org.activiti.spring.SpringProcessEngineConfiguration&quot;&gt;</span><br><span class="line">        &lt;property name&#x3D;&quot;dataSource&quot; ref&#x3D;&quot;dataSource&quot;&#x2F;&gt;</span><br><span class="line">        &lt;!--配置事务管理--&gt;</span><br><span class="line">        &lt;property name&#x3D;&quot;transactionManager&quot; ref&#x3D;&quot;dataSourceTransactionManager&quot;&#x2F;&gt;</span><br><span class="line">        &lt;!--数据源的创建格式--&gt;</span><br><span class="line">        &lt;property name&#x3D;&quot;databaseSchemaUpdate&quot; value&#x3D;&quot;true&quot;&#x2F;&gt;</span><br><span class="line">      &lt;&#x2F;bean&gt;</span><br><span class="line">    &lt;!--构造流程引擎对象--&gt;</span><br><span class="line">    &lt;bean id &#x3D; &quot;processEngineFactoryBean&quot; class&#x3D;&quot;org.activiti.spring.ProcessEngineFactoryBean&quot;&gt;</span><br><span class="line">        &lt;!--指定流程配置对象--&gt;</span><br><span class="line">        &lt;property name&#x3D;&quot;processEngineConfiguration&quot; ref&#x3D;&quot;processEngineConfiguration&quot;&#x2F;&gt;</span><br><span class="line">    &lt;&#x2F;bean&gt;</span><br><span class="line">&lt;!--报漏服务给Spring--&gt;</span><br><span class="line">    &lt;bean id&#x3D;&quot;runtimeService&quot; factory-bean&#x3D;&quot;processEngineFactoryBean&quot; factory-method&#x3D;&quot;getRuntimeService&quot;&gt;&lt;&#x2F;bean&gt;</span><br><span class="line">    &lt;bean id&#x3D;&quot;repositoryService&quot; factory-bean&#x3D;&quot;processEngineFactoryBean&quot; factory-method&#x3D;&quot;getRepositoryService&quot;&gt;&lt;&#x2F;bean&gt;</span><br><span class="line">    &lt;bean id&#x3D;&quot;formService&quot; factory-bean&#x3D;&quot;processEngineFactoryBean&quot; factory-method&#x3D;&quot;getFormService&quot;&gt;&lt;&#x2F;bean&gt;</span><br><span class="line">    &lt;bean id&#x3D;&quot;taskService&quot; factory-bean&#x3D;&quot;processEngineFactoryBean&quot; factory-method&#x3D;&quot;getTaskService&quot;&gt;&lt;&#x2F;bean&gt;</span><br><span class="line">    &lt;bean id&#x3D;&quot;historyService&quot; factory-bean&#x3D;&quot;processEngineFactoryBean&quot; factory-method&#x3D;&quot;getHistoryService&quot;&gt;&lt;&#x2F;bean&gt;</span><br><span class="line">    &lt;bean id&#x3D;&quot;activitiRule&quot; class&#x3D;&quot;org.activiti.engine.test.ActivitiRule&quot;&gt;</span><br><span class="line">        &lt;property name&#x3D;&quot;processEngine&quot; ref&#x3D;&quot;processEngineFactoryBean&quot;&#x2F;&gt;</span><br><span class="line">    &lt;&#x2F;bean&gt;</span><br><span class="line">&lt;&#x2F;beans&gt;</span><br></pre></td></tr></table></figure><p>(3) Activiti核心服务注入Spring容器<br><strong><em>详细配置见上一步</em></strong></p><h3 id="8-2-基于Spring对Activiti管理"><a href="#8-2-基于Spring对Activiti管理" class="headerlink" title="8.2 基于Spring对Activiti管理"></a>8.2 基于Spring对Activiti管理</h3><h4 id="8-2-1-功能特征"><a href="#8-2-1-功能特征" class="headerlink" title="8.2.1 功能特征"></a>8.2.1 功能特征</h4><p>(1) 集成Spring事务管理器<br>(2) 定义文件表达式中使用Spring bean<br>(3) 自动部署资源文件</p><h3 id="8-3-基于Spring的流程单元测试"><a href="#8-3-基于Spring的流程单元测试" class="headerlink" title="8.3 基于Spring的流程单元测试"></a>8.3 基于Spring的流程单元测试</h3><h4 id="8-3-1-单元测试"><a href="#8-3-1-单元测试" class="headerlink" title="8.3.1 单元测试"></a>8.3.1 单元测试</h4><p>（1） 添加pom依赖spring-test</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- https:&#x2F;&#x2F;mvnrepository.com&#x2F;artifact&#x2F;org.springframework&#x2F;spring-test --&gt;</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;org.springframework&lt;&#x2F;groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;spring-test&lt;&#x2F;artifactId&gt;</span><br><span class="line">    &lt;version&gt;4.2.5.RELEASE&lt;&#x2F;version&gt;</span><br><span class="line">    &lt;scope&gt;test&lt;&#x2F;scope&gt;</span><br><span class="line">&lt;&#x2F;dependency&gt;</span><br></pre></td></tr></table></figure><p>（2） 辅助测试Rule:ActivitiRule</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.atguigu.test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.activiti.engine.RuntimeService;</span><br><span class="line"><span class="keyword">import</span> org.activiti.engine.TaskService;</span><br><span class="line"><span class="keyword">import</span> org.activiti.engine.runtime.ProcessInstance;</span><br><span class="line"><span class="keyword">import</span> org.activiti.engine.task.Task;</span><br><span class="line"><span class="keyword">import</span> org.activiti.engine.test.ActivitiRule;</span><br><span class="line"><span class="keyword">import</span> org.activiti.engine.test.Deployment;</span><br><span class="line"><span class="keyword">import</span> org.junit.Rule;</span><br><span class="line"><span class="keyword">import</span> org.junit.Test;</span><br><span class="line"><span class="keyword">import</span> org.junit.runner.RunWith;</span><br><span class="line"><span class="keyword">import</span> org.slf4j.Logger;</span><br><span class="line"><span class="keyword">import</span> org.slf4j.LoggerFactory;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.test.context.ContextConfiguration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.test.context.junit4.SpringJUnit4ClassRunner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@program</span>: activiti6</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span>: 测试与Spring的集成</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: Mr.Wang</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span>: 2020-05-28-10-26</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@RunWith</span>(SpringJUnit4ClassRunner<span class="class">.<span class="keyword">class</span>)</span></span><br><span class="line"><span class="class">@<span class="title">ContextConfiguration</span>(<span class="title">locations</span> </span>= &#123;<span class="string">"classpath:activiti-context.xml"</span>&#125;)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestSpring</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> Logger log = LoggerFactory.getLogger(TestSpring<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Rule</span></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">public</span> ActivitiRule activitiRule;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> RuntimeService runtimeService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> TaskService taskService;</span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="meta">@Deployment</span>(resources = &#123;<span class="string">"my-process.bpmn20.xml"</span>&#125;)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test</span><span class="params">()</span></span>&#123;</span><br><span class="line">       ProcessInstance processInstance = runtimeService.startProcessInstanceByKey(<span class="string">"my-process"</span>);</span><br><span class="line">        <span class="comment">/*List&lt;Task&gt; tasks = taskService.createTaskQuery().listPage(0, 100);</span></span><br><span class="line"><span class="comment">        for (Task task : tasks) &#123;</span></span><br><span class="line"><span class="comment">            log.info("task 的某些测试数据 &#123;&#125;",task);</span></span><br><span class="line"><span class="comment">        &#125;*/</span></span><br><span class="line">        Task task = taskService.createTaskQuery().singleResult();</span><br><span class="line">        taskService.complete(task.getId());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>（3） 辅助测试TestCase:SpringActivitiTestCase</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Activiti6-0工作流引擎学习-二-–-引擎配置&quot;&gt;&lt;a href=&quot;#Activiti6-0工作流引擎学习-二-–-引擎配置&quot; class=&quot;headerlink&quot; title=&quot;Activiti6.0工作流引擎学习(二) – 引擎配置&quot;&gt;&lt;/a&gt;Acti
      
    
    </summary>
    
    
      <category term="java" scheme="http://lwblog.xyz/categories/java/"/>
    
    
      <category term="activiti6.0" scheme="http://lwblog.xyz/tags/activiti6-0/"/>
    
  </entry>
  
  <entry>
    <title>Java8日期和时间处理</title>
    <link href="http://lwblog.xyz/posts/58f1702a.html"/>
    <id>http://lwblog.xyz/posts/58f1702a.html</id>
    <published>2020-05-21T14:13:14.000Z</published>
    <updated>2020-05-25T14:51:07.708Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-java8新特性-新时间与日期API本地时间与时间戳"><a href="#1-java8新特性-新时间与日期API本地时间与时间戳" class="headerlink" title="1.java8新特性-新时间与日期API本地时间与时间戳"></a>1.java8新特性-新时间与日期API本地时间与时间戳</h2><p><code>LocalDate</code>、<code>LocalTime</code>、<code>LocalDateTime</code>类的实例是不可变的对象，分别表示使用ISO-8601的日历系统的日期、时间、日期和时间。新的API提供了简单的日期和时间的获取方法。不包含与时区有关的信息</p><h3 id="1-1-使用静态方法now获取本地时间"><a href="#1-1-使用静态方法now获取本地时间" class="headerlink" title="1.1 使用静态方法now获取本地时间"></a>1.1 使用静态方法now获取本地时间</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">LocalDate now = LocalDate.now();</span><br><span class="line">System.out.println(<span class="string">"获取系统的日期:"</span>+now);<span class="comment">// 2020-05-25</span></span><br><span class="line">LocalTime localTime = LocalTime.now();</span><br><span class="line">System.out.println(<span class="string">"获取系统的时间:"</span>+localTime);<span class="comment">//20:32:55.091</span></span><br><span class="line">LocalDateTime localDateTime = LocalDateTime.now();</span><br><span class="line">System.out.println(<span class="string">"获取系统的日期和时间:"</span>+localDateTime);<span class="comment">//2020-05-25T20:32:55.092</span></span><br></pre></td></tr></table></figure><h3 id="1-2-使用静态方法of获取日期和时间"><a href="#1-2-使用静态方法of获取日期和时间" class="headerlink" title="1.2 使用静态方法of获取日期和时间"></a>1.2 使用静态方法of获取日期和时间</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">LocalDate localDate = LocalDate.of(<span class="number">2012</span>, <span class="number">3</span>, <span class="number">23</span>);</span><br><span class="line">System.out.println(localDate);<span class="comment">//2012-03-23</span></span><br><span class="line">LocalTime localTime = LocalTime.of(<span class="number">12</span>, <span class="number">12</span>);</span><br><span class="line">System.out.println(localTime);<span class="comment">//12:12</span></span><br><span class="line">LocalDateTime localDateTime = LocalDateTime.of(<span class="number">2012</span>, <span class="number">3</span>, <span class="number">24</span>, <span class="number">12</span>, <span class="number">12</span>, <span class="number">12</span>);</span><br><span class="line">System.out.println(localDateTime);<span class="comment">//2012-03-24T12:12:12</span></span><br></pre></td></tr></table></figure><h3 id="1-3-plusDays、plusWeeks、plusMonths、plusYear向当前LocalDate对象添加几天、几周、几个月、几年"><a href="#1-3-plusDays、plusWeeks、plusMonths、plusYear向当前LocalDate对象添加几天、几周、几个月、几年" class="headerlink" title="1.3 plusDays、plusWeeks、plusMonths、plusYear向当前LocalDate对象添加几天、几周、几个月、几年"></a>1.3 plusDays、plusWeeks、plusMonths、plusYear向当前LocalDate对象添加几天、几周、几个月、几年</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">LocalDate localDate = LocalDate.now();</span><br><span class="line">System.out.println(localDate);<span class="comment">//2020-05-25</span></span><br><span class="line">LocalDate localDate1 = localDate.plusDays(<span class="number">2L</span>);</span><br><span class="line">System.out.println(localDate1);<span class="comment">//2020-05-27</span></span><br><span class="line">LocalDate localDate2 = localDate.plusMonths(<span class="number">2L</span>);</span><br><span class="line">System.out.println(localDate2);<span class="comment">//2020-07-25</span></span><br><span class="line">LocalDate localDate3 = localDate.plusWeeks(<span class="number">2L</span>);</span><br><span class="line">System.out.println(localDate3);<span class="comment">//2020-06-08</span></span><br><span class="line">LocalDate localDate4 = localDate.plusYears(<span class="number">2L</span>);</span><br><span class="line">System.out.println(localDate4);<span class="comment">//2022-05-25</span></span><br></pre></td></tr></table></figure><h3 id="1-4-Instant时间戳"><a href="#1-4-Instant时间戳" class="headerlink" title="1.4 Instant时间戳"></a>1.4 Instant时间戳</h3><p>时间戳(以Unix元年：1970年1月1日00：00：00到某个时间之间的毫秒值)</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//默认获取的是以UTC时区</span></span><br><span class="line">Instant now = Instant.now();</span><br><span class="line">System.out.println(now);<span class="comment">//2020-05-25T13:32:32.718Z</span></span><br><span class="line"><span class="comment">//对时间进行偏移量处理,以便获取当前所在时区的时间</span></span><br><span class="line">OffsetDateTime offsetDateTime=now.atOffset(ZoneOffset.ofHours(<span class="number">8</span>));</span><br><span class="line">System.out.println(offsetDateTime);<span class="comment">//2020-05-25T21:32:32.718+08:00</span></span><br><span class="line"><span class="comment">//把获取的时间转换成对应的毫秒值</span></span><br><span class="line"><span class="keyword">long</span> l = now.toEpochMilli();</span><br><span class="line">System.out.println(l);<span class="comment">//1590413552718</span></span><br></pre></td></tr></table></figure><h2 id="1-5-Duration计算两个时间之间的间隔-Period计算两个日期之间的间隔"><a href="#1-5-Duration计算两个时间之间的间隔-Period计算两个日期之间的间隔" class="headerlink" title="1.5 Duration计算两个时间之间的间隔,Period计算两个日期之间的间隔"></a>1.5 Duration计算两个时间之间的间隔,Period计算两个日期之间的间隔</h2><p><code>Duration</code>和<code>Period</code>的使用方式相同</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">Instant now = Instant.now();</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="comment">//用线程睡眠一秒钟来测试Duration的时间差</span></span><br><span class="line">    Thread.sleep(<span class="number">1000L</span>);</span><br><span class="line">&#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">   e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line">Instant now2 = Instant.now();</span><br><span class="line"><span class="comment">//比较两个时间的间隔</span></span><br><span class="line">Duration duration = Duration.between(now, now2);</span><br><span class="line"><span class="comment">//默认输出`PT1.002S`为ISO-861的表示方法</span></span><br><span class="line">System.out.println(duration);</span><br><span class="line"><span class="comment">//将ISO的表示的方法转换为纳秒、或者毫秒值</span></span><br><span class="line"><span class="keyword">long</span> l = duration.toNanos();<span class="comment">//1002000000</span></span><br><span class="line"><span class="comment">//转换为毫秒值</span></span><br><span class="line"><span class="comment">//long l1 = duration.toMillis();</span></span><br><span class="line">System.out.println(l);</span><br><span class="line"><span class="comment">//System.out.println(l1);</span></span><br></pre></td></tr></table></figure><h2 id="2-java8新特性-新时间与日期API-时间校正器"><a href="#2-java8新特性-新时间与日期API-时间校正器" class="headerlink" title="2.java8新特性-新时间与日期API-时间校正器"></a>2.java8新特性-新时间与日期API-时间校正器</h2><p><code>TemporalAdjuster</code>:时间校正器。有时候我们需要获取例如：将日期调整到“下周日”等操作。<br><code>TemporalAdjusters</code>:该类通过静态方法提供了大量的常用<code>TemporalAdjuster</code>的实现</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">LocalDateTime ldt = LocalDateTime.now();</span><br><span class="line">System.out.println(ldt);<span class="comment">//2020-05-25T22:00:35.532</span></span><br><span class="line"><span class="comment">//获取下一个周日</span></span><br><span class="line">LocalDateTime dateTime = ldt.with(TemporalAdjusters.next(DayOfWeek.SUNDAY));</span><br><span class="line">System.out.println(dateTime);<span class="comment">//2020-05-31T22:00:35.532</span></span><br><span class="line"><span class="comment">//自定义：下一个工作日是什么时候</span></span><br><span class="line">LocalDateTime with = ldt.with(l -&gt; &#123;</span><br><span class="line">    LocalDateTime ldt4 = (LocalDateTime) l;</span><br><span class="line">    <span class="comment">//获取今天是星期几</span></span><br><span class="line">    DayOfWeek dayOfWeek = ldt4.getDayOfWeek();</span><br><span class="line">    System.out.println(dayOfWeek);<span class="comment">//MONDAY</span></span><br><span class="line">      <span class="keyword">if</span> (dayOfWeek.equals(DayOfWeek.FRIDAY)) &#123;</span><br><span class="line">          <span class="keyword">return</span> ldt4.plusDays(<span class="number">3L</span>);</span><br><span class="line">      &#125; <span class="keyword">else</span> <span class="keyword">if</span> (dayOfWeek.equals(DayOfWeek.SUNDAY)) &#123;</span><br><span class="line">          <span class="keyword">return</span> ldt4.plusDays(<span class="number">2L</span>);</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">           <span class="keyword">return</span> ldt4.plusDays(<span class="number">1L</span>);</span><br><span class="line">      &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"> System.out.println(with);<span class="comment">//2020-05-26T22:06:51.576</span></span><br></pre></td></tr></table></figure><h2 id="3-java8新特性-新时间与日期API-时间格式化与时区处理"><a href="#3-java8新特性-新时间与日期API-时间格式化与时区处理" class="headerlink" title="3.java8新特性-新时间与日期API-时间格式化与时区处理"></a>3.java8新特性-新时间与日期API-时间格式化与时区处理</h2><h3 id="3-1时间和日期的格式化"><a href="#3-1时间和日期的格式化" class="headerlink" title="3.1时间和日期的格式化"></a>3.1时间和日期的格式化</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">DateTimeFormatter isoLocalDate = DateTimeFormatter.ISO_LOCAL_DATE;</span><br><span class="line">LocalDateTime now = LocalDateTime.now();</span><br><span class="line">System.out.println(now);</span><br><span class="line">String format = now.format(isoLocalDate);<span class="comment">//2020-05-25T22:22:48.083</span></span><br><span class="line">System.out.println(format);<span class="comment">//2020-05-25</span></span><br><span class="line"><span class="comment">//定义自己的格式</span></span><br><span class="line">DateTimeFormatter dateTimeFormatter = DateTimeFormatter.ofPattern(<span class="string">"yyyy年MM月dd日"</span>);</span><br><span class="line">String format1 = dateTimeFormatter.format(now);</span><br><span class="line">System.out.println(format1);<span class="comment">//2020年05月25日</span></span><br></pre></td></tr></table></figure><h3 id="3-2-时区的处理"><a href="#3-2-时区的处理" class="headerlink" title="3.2 时区的处理"></a>3.2 时区的处理</h3><p>java8中加入了对时区的支持，带时区的时间分别为<code>ZonedDate</code>,<code>ZonedTIme</code>,<code>ZoneDateTime</code>。其中每个时区都对应着ID，地区ID都是<code>区域/城市</code>的格式，例如：<code>Asia/Shanghai</code>等。<br><code>ZoneId</code>该类中包含了所有的时区信息：<br>getAvailableZoneIds():可以获取所有时区的信息<br>of(id):用指定的时区信息获取ZoneId对象</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//获取所有的时区</span></span><br><span class="line">Set&lt;String&gt; availableZoneIds = ZoneId.getAvailableZoneIds();</span><br><span class="line">availableZoneIds.forEach(System.out::println);</span><br><span class="line"><span class="comment">//获取时区为上海的时间</span></span><br><span class="line">LocalDateTime now = LocalDateTime.now(ZoneId.of(<span class="string">"Asia/Shanghai"</span>));<span class="comment">//2020-05-25T22:47:57.216</span></span><br><span class="line">System.out.println(now);</span><br><span class="line"><span class="comment">//也可以使用以下的方法设置时区,返回的是带有时区的时间和日期</span></span><br><span class="line">LocalDateTime now1 = LocalDateTime.now();</span><br><span class="line">ZonedDateTime zonedDateTime = now1.atZone(ZoneId.of(<span class="string">"Asia/Shanghai"</span>));<span class="comment">//2020-05-25T22:47:57.222+08:00[Asia/Shanghai]</span></span><br><span class="line">System.out.println(zonedDateTime);</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;1-java8新特性-新时间与日期API本地时间与时间戳&quot;&gt;&lt;a href=&quot;#1-java8新特性-新时间与日期API本地时间与时间戳&quot; class=&quot;headerlink&quot; title=&quot;1.java8新特性-新时间与日期API本地时间与时间戳&quot;&gt;&lt;/a&gt;1.
      
    
    </summary>
    
    
      <category term="java" scheme="http://lwblog.xyz/categories/java/"/>
    
    
      <category term="java" scheme="http://lwblog.xyz/tags/java/"/>
    
      <category term="JDK1.8" scheme="http://lwblog.xyz/tags/JDK1-8/"/>
    
  </entry>
  
  <entry>
    <title>谷歌浏览器调试技巧</title>
    <link href="http://lwblog.xyz/posts/4cc93b7c.html"/>
    <id>http://lwblog.xyz/posts/4cc93b7c.html</id>
    <published>2020-05-18T01:14:32.000Z</published>
    <updated>2020-05-18T01:15:41.580Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
      <category term="google" scheme="http://lwblog.xyz/categories/google/"/>
    
    
      <category term="调试" scheme="http://lwblog.xyz/tags/%E8%B0%83%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>谷歌云盘折腾记</title>
    <link href="http://lwblog.xyz/posts/af6fa0b3.html"/>
    <id>http://lwblog.xyz/posts/af6fa0b3.html</id>
    <published>2020-05-17T03:17:09.000Z</published>
    <updated>2020-05-22T13:47:44.551Z</updated>
    
    <content type="html"><![CDATA[<h2 id="折腾原因"><a href="#折腾原因" class="headerlink" title="折腾原因"></a>折腾原因</h2><p>前段时间由于某些原因，Goindex基于rclone挂载的谷歌云盘在某些原因的情况下不能免科学上网进行访问。这对于我这个大量文件都存放在谷歌云盘上的人来说就有点难受了。毕竟咱是一个无产阶级没有那么多的money进行购买机场流量。只能在茫茫的查找对应的替代品，功夫不负有心人。最终在努力下终于找到一个解决的办法，故此在这里记录一下</p><h2 id="前期准备"><a href="#前期准备" class="headerlink" title="前期准备"></a>前期准备</h2><ul><li>能科学上网的环境(准备的情况下需要科学上网)</li><li><a href="https://rclone.org/downloads/" target="_blank" rel="noopener">rclone</a>  <strong>下载安装rclone</strong></li><li><a href="https://www.cloudflare.com/" target="_blank" rel="noopener">CLOUDFLARE</a> <strong>提前注册好账号</strong></li><li><a href="https://install.gd.workers.dev/" target="_blank" rel="noopener">Goindex</a> <strong>现在已经不能用了，原先我就是用的这个</strong></li></ul><h2 id="安装免科学上网访问谷歌云盘"><a href="#安装免科学上网访问谷歌云盘" class="headerlink" title="安装免科学上网访问谷歌云盘"></a>安装免科学上网访问谷歌云盘</h2><p>我是在参考YouTube上大佬小小白的视频进行操作的，这里附上大佬的<a href="https://www.youtube.com/watch?v=oPcb1FZXu5o" target="_blank" rel="noopener">视频链接</a>。各位看官，可以先参考这位大佬的视频进行操作。如果顺利的话就能正常的免科学上网的访问自己的谷歌云盘了。但是，我偏偏是这个不幸中的一人。我按照视频的操作过程中，总是卡在获取谷歌云盘的token验证失败的情况，查了很多资料都没能解决此问题。如果你也遇到这样的问题话，可以参考我的做法。<br>首先，<strong><em>你原先在GoIndex上生成过对应的代码，并且在cloudflare上部署过</em></strong>，下图是我部署代码的部分截图<br><img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1gevadnpk2xj31o20jetce.jpg" alt=""><br>其次，需要在cloudflare上新建一个worked，将<a href="https://github.com/yanzai/goindex" target="_blank" rel="noopener">这里</a>index.js的代码复制到刚刚新建的worked中，并且将下图中的ID、密钥和token替换成原先使用Goindex生成的代码中的ID、密钥和token。(<strong><em>这里之所以是这样做，是因为使用rclone生成token的时候总是报错</em></strong>)<br><img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1gevahdci01j31je0u0k1z.jpg" alt=""><br>最后，保存并部署代码就OK了，这样就能再次在不科学上网的情况下继续浏览自己谷歌云盘中的内容了。<br>在这次更新的代码中还有很多的改进，比如可以对不同的文件夹赋予不同的权限，能在进行搜索操作</p><h2 id="GDIndex代码生成器"><a href="#GDIndex代码生成器" class="headerlink" title="GDIndex代码生成器"></a>GDIndex代码生成器</h2><p>虽然GoIndex代码生成器目前已经不能使用了，但是现在有一个新的GDIndex代码生成器可以替代GoIndex的代码生成器<br><a href="https://gdindex-code-builder.glitch.me/" target="_blank" rel="noopener">GDIndex</a>的使用方法同GoIndex。需要的小伙伴可以自行百度设置，或者参考上面提到的视频。</p><p><strong><em>文章参考：</em></strong></p><ol><li><a href="https://www.youtube.com/watch?v=oPcb1FZXu5o" target="_blank" rel="noopener">小小白大佬的视频</a></li><li><a href="https://xiaoxiaobai.ga/?p=256" target="_blank" rel="noopener">小小白大佬的文档说明</a></li></ol>]]></content>
    
    <summary type="html">
    
      对于科学上网流量访问你google driver的捉襟见肘的你，可以进来瞅一瞅
    
    </summary>
    
    
      <category term="google" scheme="http://lwblog.xyz/categories/google/"/>
    
    
      <category term="google diriver" scheme="http://lwblog.xyz/tags/google-diriver/"/>
    
  </entry>
  
  <entry>
    <title>macbookpro使用技巧</title>
    <link href="http://lwblog.xyz/posts/2366fd10.html"/>
    <id>http://lwblog.xyz/posts/2366fd10.html</id>
    <published>2020-05-15T04:48:36.000Z</published>
    <updated>2020-05-15T06:59:49.314Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-mac的隐藏功能"><a href="#1-mac的隐藏功能" class="headerlink" title="1.mac的隐藏功能"></a>1.mac的隐藏功能</h2><ul><li><p>直观听到音量的渐变声音: shfit+音量键</p></li><li><p>声音或者亮度1/4的变化：shfit+option+音量键/亮度建</p></li><li><p>聊天打字快速调出emoj动画：command+control+空格</p></li><li><p>切换显示已关闭或者最小化的窗口：command+tab同时摁下option</p></li><li><p>隐藏当前窗口的程序：command+H</p><ul><li>区分关闭和隐藏的代码(开启后隐藏的图标呈现半透明状态)</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">defaults write com.apple.Dock showhidden -bool TRUE; killall Dock</span><br></pre></td></tr></table></figure><ul><li>关闭的代码</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">defaults write com.apple.Dock showhidden -bool FALSE; killall Dock</span><br></pre></td></tr></table></figure></li><li><p>command+tab选中图标后摁下Q是关闭程序</p></li></ul><h2 id="2-mac中常用软件"><a href="#2-mac中常用软件" class="headerlink" title="2. mac中常用软件"></a>2. mac中常用软件</h2><h2 id="3-mac的高效使用"><a href="#3-mac的高效使用" class="headerlink" title="3.mac的高效使用"></a>3.mac的高效使用</h2><ul><li><p>一位数密码：pwpolicy -clearaccountpolicies  需要在终端执行此命令</p></li><li><p>更改搜索这台mac为搜索此文件夹</p><p>访达—偏好设置—高级—执行搜索选择搜索但前文件夹</p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1get21swmawj30la0m8gw3.jpg" style="zoom:50%;" /><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1get22t0o27j30lg0leqau.jpg" style="zoom:50%;" /></li><li><p>打开程序的偏好设置： command+,</p></li><li><p>手动添加打开系统偏好设置的快捷键</p><p>系统偏好设置—键盘—快捷键—APP快捷键—点击“+”，应用程序选择所有应用程序，菜单标题改为“系统偏好设置…”,快捷键中输入自己熟悉的快捷键就OK—点击添加</p><p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1get2c3wzzdj30ue0ns4ca.jpg" alt=""></p><ul><li>全局开启访达<ol><li>打开自动操作</li></ol></li></ul><p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1get2lrvz89j31xk0kk7nk.jpg" alt=""></p><ol start="2"><li>点击新建文稿</li></ol><p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1get2ny6jayj31as0pkn9h.jpg" alt=""></p><ol start="2"><li>快速操作</li></ol><p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1get2old69wj31jm0u0kjl.jpg" alt=""></p><ol start="3"><li>点击实用工具，将开启应用程序拖拽到右边</li></ol><p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1get2r1n9e8j31jo0m01bx.jpg" alt=""></p><ol start="4"><li><p>工作流程收到选择：没有输入</p><p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1get2swslhhj31io0ca46c.jpg" alt=""></p></li><li><p>选择新建变量—系统—资源库—coreservices—访达</p></li></ol><p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1get2wqu7o0j316y0u0qv5.jpg" alt=""></p><p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1get31lzelkj318w0p2as3.jpg" alt=""></p><p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1get32azve5j30z40cq46w.jpg" alt=""></p></li></ul><ol start="6"><li><p>点击这里可以测试是否配置正确，然后存储</p><p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1get33dggnij31js0k6nfj.jpg" alt=""></p><p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1get35y97f7j319q0mm1kx.jpg" alt=""></p><p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1get36sw1rjj317m0e0tkl.jpg" alt=""></p></li><li><p>快捷键定义</p><p>通过系统偏好设置—键盘—快捷键—服务—通用—全局开启访达</p><p>![image-20200515135133428](/Users/wangyufei/Library/Application Support/typora-user-images/image-20200515135133428.png)</p></li><li><p>在全局开启访达后边点击设置快捷键，我这里设置的是command+option+空格</p><p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1get3gr7xbaj30k20f8tc5.jpg" alt=""></p></li></ol>]]></content>
    
    <summary type="html">
    
      mac笔记本使用技巧
    
    </summary>
    
    
      <category term="Mac" scheme="http://lwblog.xyz/categories/Mac/"/>
    
    
      <category term="Mac" scheme="http://lwblog.xyz/tags/Mac/"/>
    
  </entry>
  
  <entry>
    <title>sqlserver数据库还原单表数据操作</title>
    <link href="http://lwblog.xyz/posts/4a17b156.html"/>
    <id>http://lwblog.xyz/posts/4a17b156.html</id>
    <published>2020-05-08T14:53:07.000Z</published>
    <updated>2020-05-15T02:45:06.117Z</updated>
    
    <content type="html"><![CDATA[<p>在系统数据和数据库数据备份或者升级的时候，我们总是全量的备份应用或者数据。在升级完成使用一段时间后突然间发现某张表的数据有问题，此时在全部的还原数据库的数据则不太合理，那如何只还原出现问题的这张表的数据呢？</p><p>首先，我们需要将升级时全量备份的数据库还原成一个新的数据库，如何还原一个新的数据库，此处不在赘述，网上有好多。自我感觉还是参考<a href="https://docs.microsoft.com/zh-cn/sql/relational-databases/backup-restore/restore-a-database-to-a-new-location-sql-server?view=sql-server-ver15" target="_blank" rel="noopener">sqlserver官方的还原说明</a>或者参考<a href="https://www.jianshu.com/p/a153c20a577d?utm_campaign=maleskine&utm_content=note&utm_medium=seo_notes&utm_source=recommendation" target="_blank" rel="noopener">SQL Server从BAK文件还原到新数据库</a></p><p>之后，我们选择刚刚还原完成的数据库使用如下的命令将ecology.dbo.hrmresource 所有的数据导入到demo.dbo.hrmresource_Test中<br><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1gesxhysb3zj31hx0u0n7s.jpg" alt=""></p><p>选中刚刚还原的数据库，执行如下的sql语句，执行完成后刷新可以看到demo中已经出现了需要还原的表单数据</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Select</span> * <span class="keyword">into</span> demo.dbo.hrmresource_test <span class="keyword">From</span> ecology.dbo.hrmresource</span><br></pre></td></tr></table></figure><p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1gesxkucf1wj319e0u0x5l.jpg" alt=""></p><p>两张表单对比,我这里的表单中没有数据，但是可以看到需要还原的demo库中对应的表单结构已经有了</p><p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1gesxp4rmjgj318s0u01kx.jpg" alt="ecology"></p><p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1gesxr7mbkxj31670u01kx.jpg" alt="demo库"></p><p>最后，我们使用下列命令将原来的表进行删除，并把HtmlLabelInfo_Test 重命名为HtmlLabelInfo</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">//删除原有的表单,此处我的里边没有对用的表单,就没有执行这一步</span><br><span class="line"><span class="keyword">drop</span> <span class="keyword">table</span> [dbo].[Hrmresource]</span><br><span class="line">//表单重命名,或者在ssms操作工具中直接在actionsetting_test上摁下F2进行表单重命名</span><br><span class="line">EXEC sp_rename <span class="string">'Hrmresource_test'</span>,<span class="string">'Hrmresource'</span></span><br></pre></td></tr></table></figure><p>或者是在navicat中可以直接右键选择重命名，对表单的名称进行更改</p><p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1gesxs79m9wj30w20u07wh.jpg" alt=""></p><p>至此,在全量备份的情况下即可还原某一张表的数据。</p>]]></content>
    
    <summary type="html">
    
      sqlserver数据库通过全备份还原某张表数据
    
    </summary>
    
    
      <category term="数据库" scheme="http://lwblog.xyz/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
      <category term="sqlserver" scheme="http://lwblog.xyz/tags/sqlserver/"/>
    
  </entry>
  
  <entry>
    <title>网络在在线传输工具 --- 奶牛快传</title>
    <link href="http://lwblog.xyz/posts/994d00c4.html"/>
    <id>http://lwblog.xyz/posts/994d00c4.html</id>
    <published>2020-05-08T14:53:07.000Z</published>
    <updated>2020-05-14T03:11:14.184Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-奶牛快传"><a href="#1-奶牛快传" class="headerlink" title="1.奶牛快传"></a>1.<a href="https://cowtransfer.com/" target="_blank" rel="noopener">奶牛快传</a></h2><h3 id="1-1-免费超快的传文件工具"><a href="#1-1-免费超快的传文件工具" class="headerlink" title="1.1 免费超快的传文件工具"></a>1.1 免费超快的传文件工具</h3><p>奶牛快传是一款免费、无需注册即可直接使用的网页端大文件临时传输网盘服务。它提供了网页版、微信小程序、IOS以及安卓端。无论是办公文档、照片、还是电影视频通通都能轻松分享。</p><p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1gerseagq8pj31q10u0hdt.jpg" alt=""></p><p>未注册用户则可最大传输 2GB 文件,默认保留7天，可以免费下载100次。支持加密、邮件和短信分享</p><p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1gerskqbjt2j31uf0u0u0x.jpg" alt=""></p><p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1gersldpc6tj31vn0u0u0x.jpg" alt=""></p><h3 id="1-2-奶牛快传的使用"><a href="#1-2-奶牛快传的使用" class="headerlink" title="1.2 奶牛快传的使用"></a>1.2 奶牛快传的使用</h3><p>你只需在任何浏览器打开<a href="https://cowtransfer.com/" target="_blank" rel="noopener">奶牛快传</a>的网站，通过点击上传按钮或拖放文件即可开始上传，支持一次批量上传多个文件。</p><p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1gerseagq8pj31q10u0hdt.jpg" alt=""></p><p>之后你就能获得文件的共享链接了。你只需将链接发给别人，对方就能直接通过浏览器下载了，对方并不需要注册登录，也无需下载 APP 等麻烦操作，实用性很强。同时，奶牛快传还提供了共享网址所对应的二维码以及微信小程序二维码，这样不管用手机还是电脑来下载文件都更方便。起码自己用电脑给手机发文件的场景也是经常会用到的。</p><p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1gersrgbg0gj31un0u01ky.jpg" alt=""></p><h3 id="1-3-奶牛快传注册账户"><a href="#1-3-奶牛快传注册账户" class="headerlink" title="1.3 奶牛快传注册账户"></a>1.3 奶牛快传注册账户</h3><p>还未体验过注册账户，待体验后在进行分享…..</p>]]></content>
    
    <summary type="html">
    
      不需注册就能上传和下载文件，奶牛快传非常适合进行大文件分享和存储
    
    </summary>
    
    
      <category term="网络在在线传输工具" scheme="http://lwblog.xyz/categories/%E7%BD%91%E7%BB%9C%E5%9C%A8%E5%9C%A8%E7%BA%BF%E4%BC%A0%E8%BE%93%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="奶牛快传" scheme="http://lwblog.xyz/tags/%E5%A5%B6%E7%89%9B%E5%BF%AB%E4%BC%A0/"/>
    
      <category term="文件传输" scheme="http://lwblog.xyz/tags/%E6%96%87%E4%BB%B6%E4%BC%A0%E8%BE%93/"/>
    
      <category term="网络在在线传输工具" scheme="http://lwblog.xyz/tags/%E7%BD%91%E7%BB%9C%E5%9C%A8%E5%9C%A8%E7%BA%BF%E4%BC%A0%E8%BE%93%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>油猴(Tampermonkey)常用脚本</title>
    <link href="http://lwblog.xyz/posts/44e1e43b.html"/>
    <id>http://lwblog.xyz/posts/44e1e43b.html</id>
    <published>2020-05-08T14:32:09.000Z</published>
    <updated>2020-05-13T08:09:31.020Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-什么是油猴"><a href="#1-什么是油猴" class="headerlink" title="1.什么是油猴"></a>1.什么是油猴</h2><p>从英文翻译而来-Tampermonkey是一个捐赠软件用户脚本管理器，可用作浏览器扩展。该软件使用户能够添加和使用用户脚本，这些脚本是可用于修改网页的JavaScript程序</p><h2 id="2-油猴下载地址"><a href="#2-油猴下载地址" class="headerlink" title="2.油猴下载地址"></a>2.油猴下载地址</h2><ul><li><a href="https://www.tampermonkey.net/" target="_blank" rel="noopener">官网下载</a></li><li><a href="https://chrome.google.com/webstore/detail/tampermonkey/dhdgffkkebhmkfjojejmpbldmpobfkfo" target="_blank" rel="noopener">谷歌商店</a><h2 id="3-常用插件"><a href="#3-常用插件" class="headerlink" title="3.常用插件"></a>3.常用插件</h2><h3 id="3-1-批量下载网页图片-Picviewer-CE"><a href="#3-1-批量下载网页图片-Picviewer-CE" class="headerlink" title="3.1 批量下载网页图片 - Picviewer CE+"></a>3.1 批量下载网页图片 - Picviewer CE+</h3><a href="https://greasyfork.org/zh-CN/scripts/24204-picviewer-ce" target="_blank" rel="noopener">Picviewer CE+</a> 是一款浏览器油猴脚本，可以将包含很多图片的网页变成图片浏览器，还能对图片进行翻转、旋转、放大，显示原始大图、收藏、批量保存，聚合所有分页大图，图片在线编辑等操作</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;1-什么是油猴&quot;&gt;&lt;a href=&quot;#1-什么是油猴&quot; class=&quot;headerlink&quot; title=&quot;1.什么是油猴&quot;&gt;&lt;/a&gt;1.什么是油猴&lt;/h2&gt;&lt;p&gt;从英文翻译而来-Tampermonkey是一个捐赠软件用户脚本管理器，可用作浏览器扩展。该软件使用户
      
    
    </summary>
    
    
    
      <category term="油猴" scheme="http://lwblog.xyz/tags/%E6%B2%B9%E7%8C%B4/"/>
    
      <category term="Tampermonkey" scheme="http://lwblog.xyz/tags/Tampermonkey/"/>
    
  </entry>
  
</feed>
